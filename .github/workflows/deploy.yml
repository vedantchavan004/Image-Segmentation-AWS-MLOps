name: Deploy FastAPI YOLO to AWS

on:
  push:
    branches:
      - main  # Trigger deployment on changes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com

    - name: Build & Push Docker Image
      run: |
        docker build -t fastapi-yolo11 .
        docker tag fastapi-yolo11:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com/fastapi-yolo11:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com/fastapi-yolo11:latest

    - name: Add SSH Key & Set Permissions
      run: |
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > segmentation.pem
        chmod 600 segmentation.pem

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i segmentation.pem ubuntu@${{ secrets.YOUR_EC2_PUBLIC_IP }} << 'EOF'
          set -e  # Stop execution if any command fails
          echo "ðŸš€ Pulling latest code and redeploying..."

          # Navigate to project directory
          cd /home/ubuntu/Image-Segmentation-AWS-MLOps || exit 1

          # Ensure we are on the correct branch
          git checkout main

          # Pull the latest changes **without cloning**
          git fetch origin main
          git reset --hard origin/main
          
          # Ensure correct file permissions
          chmod 644 /home/ubuntu/YOUR_REPO_NAME/templates/index.html

          # Pull the latest Docker image from AWS ECR
          aws ecr get-login-password --region eu-central-1 | sudo docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com
          sudo docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com/fastapi-yolo11:latest

          # Stop and remove the old container
          sudo docker stop $(sudo docker ps -q) || true
          sudo docker rm $(sudo docker ps -aq) || true

          # Run the new container
          sudo docker run -d -p 8000:8000 --name fastapi-app ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com/fastapi-yolo11:latest

          # Wait for the container to start
          sleep 5
          
          # Copy updated files inside the running container
          sudo docker cp /home/ubuntu/YOUR_REPO_NAME/templates/index.html $(sudo docker ps -q):/app/templates/index.html
          sudo docker cp /home/ubuntu/YOUR_REPO_NAME/app.py $(sudo docker ps -q):/app/app.py
          
          # Restart the container to apply changes
          sudo docker restart $(sudo docker ps -q)
          
          echo "âœ… Deployment completed successfully!"
        EOF
